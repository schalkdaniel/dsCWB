% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bl.R
\name{BlOneHot}
\alias{BlOneHot}
\title{One-hot encoding base learner class}
\description{
This class creates a base learner that can be used for calculating
predictions, fitting parameters, etc.
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{BlOneHot$new()}}
\item \href{#method-basisTrafo}{\code{BlOneHot$basisTrafo()}}
\item \href{#method-initData}{\code{BlOneHot$initData()}}
\item \href{#method-initDataXtX}{\code{BlOneHot$initDataXtX()}}
\item \href{#method-initEmpty}{\code{BlOneHot$initEmpty()}}
\item \href{#method-getXtX}{\code{BlOneHot$getXtX()}}
\item \href{#method-getPenalty}{\code{BlOneHot$getPenalty()}}
\item \href{#method-getPenaltyMat}{\code{BlOneHot$getPenaltyMat()}}
\item \href{#method-getXty}{\code{BlOneHot$getXty()}}
\item \href{#method-train}{\code{BlOneHot$train()}}
\item \href{#method-predict}{\code{BlOneHot$predict()}}
\item \href{#method-predictNewdata}{\code{BlOneHot$predictNewdata()}}
\item \href{#method-updateParam}{\code{BlOneHot$updateParam()}}
\item \href{#method-getDictionary}{\code{BlOneHot$getDictionary()}}
\item \href{#method-updatePenaltyMat}{\code{BlOneHot$updatePenaltyMat()}}
\item \href{#method-updatePenalty}{\code{BlOneHot$updatePenalty()}}
\item \href{#method-getFeature}{\code{BlOneHot$getFeature()}}
\item \href{#method-getHyperpars}{\code{BlOneHot$getHyperpars()}}
\item \href{#method-getParam}{\code{BlOneHot$getParam()}}
\item \href{#method-getType}{\code{BlOneHot$getType()}}
\item \href{#method-getDesign}{\code{BlOneHot$getDesign()}}
\item \href{#method-clone}{\code{BlOneHot$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Creates a new instance of this [R6][R6::R6Class] class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BlOneHot$new(categories)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{categories}}{(`character()`)\cr
Categories of the categorical feature.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-basisTrafo"></a>}}
\if{latex}{\out{\hypertarget{method-basisTrafo}{}}}
\subsection{Method \code{basisTrafo()}}{
Calculates the basis transformation of the base learner.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BlOneHot$basisTrafo(x)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{(`numeric()`)\cr
Data vector.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-initData"></a>}}
\if{latex}{\out{\hypertarget{method-initData}{}}}
\subsection{Method \code{initData()}}{
Initializes data based on given data. This function should
be used at the sites.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BlOneHot$initData(x, feature, df, val_idx = NULL, pen = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{(`numeric()`)\cr
Data vector.}

\item{\code{feature}}{(`character(1L)`)\cr
Character containing the name of the feature.}

\item{\code{df}}{(`numeric(1L)`)\cr
Value indicating the degrees of freedom for the base learner.}

\item{\code{val_idx}}{(`integer()`)\cr
Vector containing the indices used for validation.}

\item{\code{pen}}{(`numeric(1L)`)\cr
Penalty term for the base learner. If set, df is ignored.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-initDataXtX"></a>}}
\if{latex}{\out{\hypertarget{method-initDataXtX}{}}}
\subsection{Method \code{initDataXtX()}}{
Initializes data based on the hat matrix. This function should
be used at the host.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BlOneHot$initDataXtX(feature, df, xtx)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{feature}}{(`character(1L)`)\cr
Character containing the name of the feature.}

\item{\code{df}}{(`numeric(1L)`)\cr
Value indicating the degrees of freedom for the base learner.}

\item{\code{xtx}}{(`matrix()`)\cr
Hat matrix used for parameter estimation.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-initEmpty"></a>}}
\if{latex}{\out{\hypertarget{method-initEmpty}{}}}
\subsection{Method \code{initEmpty()}}{
Initializes an empty base learner. This one can be used for
simple predictions without data in it.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BlOneHot$initEmpty(feature, df = NULL, penalty = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{feature}}{(`character(1L)`)\cr
Character containing the name of the feature.}

\item{\code{df}}{(`numeric(1L)`)\cr
Value indicating the degrees of freedom for the base learner.}

\item{\code{penalty}}{(`numeric(1L)`)\cr
Set the penalty (just for information, has no effect).}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getXtX"></a>}}
\if{latex}{\out{\hypertarget{method-getXtX}{}}}
\subsection{Method \code{getXtX()}}{
Get XtX.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BlOneHot$getXtX()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getPenalty"></a>}}
\if{latex}{\out{\hypertarget{method-getPenalty}{}}}
\subsection{Method \code{getPenalty()}}{
Get penalty.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BlOneHot$getPenalty()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getPenaltyMat"></a>}}
\if{latex}{\out{\hypertarget{method-getPenaltyMat}{}}}
\subsection{Method \code{getPenaltyMat()}}{
Get penalty matrix.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BlOneHot$getPenaltyMat()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getXty"></a>}}
\if{latex}{\out{\hypertarget{method-getXty}{}}}
\subsection{Method \code{getXty()}}{
Get Xty.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BlOneHot$getXty(y, type = "full")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{y}}{(`numeric()`)\cr
y variable which is multiplied with X}

\item{\code{type}}{(`character(1L)`)\cr
Type which target should be returned. Choices are
`full` (for the whole vector), `train` (for the vector used for training),
and `val` (for the validation vector).}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-train"></a>}}
\if{latex}{\out{\hypertarget{method-train}{}}}
\subsection{Method \code{train()}}{
Calculate parameter estimates based on
be used at the host.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BlOneHot$train(y = NULL, xty = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{y}}{(`numeric(1L)`)\cr
Response vector.}

\item{\code{xty}}{(`matrix()|numeric()`)\cr
X^t y with X design matrix and y response vector.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-predict"></a>}}
\if{latex}{\out{\hypertarget{method-predict}{}}}
\subsection{Method \code{predict()}}{
Calculate prediction based on a parameter vector.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BlOneHot$predict(par = NULL, type = "full")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{par}}{(`numeric()`)\cr
Parameter vector used for predicting on the data set
in design. If `NULL`, the internal parameter vector is used.}

\item{\code{type}}{(`character(1L)`)\cr
Type which predictions should be returned. Choices are
`full` (for the whole vector), `train` (for the vector used for training),
and `val` (for the validation vector).}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-predictNewdata"></a>}}
\if{latex}{\out{\hypertarget{method-predictNewdata}{}}}
\subsection{Method \code{predictNewdata()}}{
Calculate prediction for the new data.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BlOneHot$predictNewdata(newdata, par = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{newdata}}{(`data.frame()`)\cr
New data. Note that `newdata` must contain the feature.}

\item{\code{par}}{(`numeric()`)\cr
Parameter vector used for predicting on new data.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-updateParam"></a>}}
\if{latex}{\out{\hypertarget{method-updateParam}{}}}
\subsection{Method \code{updateParam()}}{
Add parameter vector to the already stored parameter vector.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BlOneHot$updateParam(par)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{par}}{(`numeric()`)\cr
Parameter vector added to the internal stored parameter.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getDictionary"></a>}}
\if{latex}{\out{\hypertarget{method-getDictionary}{}}}
\subsection{Method \code{getDictionary()}}{
Get knot range.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BlOneHot$getDictionary()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-updatePenaltyMat"></a>}}
\if{latex}{\out{\hypertarget{method-updatePenaltyMat}{}}}
\subsection{Method \code{updatePenaltyMat()}}{
Re-set the penalty terms.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BlOneHot$updatePenaltyMat(penmat)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{penmat}}{(`matrix()`)\cr
New penalty matrix.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-updatePenalty"></a>}}
\if{latex}{\out{\hypertarget{method-updatePenalty}{}}}
\subsection{Method \code{updatePenalty()}}{
Re-set the penalty terms.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BlOneHot$updatePenalty(pen)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{pen}}{(`numeric(1)`)\cr
New penalty terms.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getFeature"></a>}}
\if{latex}{\out{\hypertarget{method-getFeature}{}}}
\subsection{Method \code{getFeature()}}{
Get feature name.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BlOneHot$getFeature()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getHyperpars"></a>}}
\if{latex}{\out{\hypertarget{method-getHyperpars}{}}}
\subsection{Method \code{getHyperpars()}}{
Get hyperparameters (df, penalty, order, and derivs).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BlOneHot$getHyperpars()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getParam"></a>}}
\if{latex}{\out{\hypertarget{method-getParam}{}}}
\subsection{Method \code{getParam()}}{
Get parameter vector.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BlOneHot$getParam()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getType"></a>}}
\if{latex}{\out{\hypertarget{method-getType}{}}}
\subsection{Method \code{getType()}}{
Get the base learner type.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BlOneHot$getType()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getDesign"></a>}}
\if{latex}{\out{\hypertarget{method-getDesign}{}}}
\subsection{Method \code{getDesign()}}{
Get design matrix.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BlOneHot$getDesign()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BlOneHot$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
