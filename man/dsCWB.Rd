% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/train.R
\name{dsCWB}
\alias{dsCWB}
\title{Train a distributed CWB model.}
\usage{
dsCWB(
  connections,
  symbol,
  target = NULL,
  feature_names,
  mstop = 100L,
  learning_rate = 0.1,
  df = 5,
  nknots = 20L,
  ord = 3L,
  derivs = 2L,
  val_fraction = NULL,
  patience = NULL,
  eps_for_break = NULL,
  positive = NULL,
  seed = NULL
)
}
\arguments{
\item{connections}{(``)\cr
Connections to the DataSHIELD servers.}

\item{symbol}{(`character(1L)`)\cr
Character containing the name of the data.}

\item{target}{(`character(1L)`)\cr
Character containing the name of the target variable.}

\item{feature_names}{(`character()`)\cr
Character vector of all target variables.}

\item{mstop}{(`integer(1L)`)\cr
Number of boosting iterations.}

\item{learning_rate}{(`numeric(1L)`)\cr
Learning rate.}

\item{df}{(`numeric(1L)`)\cr
Degrees of freedom.}

\item{nknots}{(`integer(1L)`)\cr
Number of inner knots.}

\item{ord}{(`integer(1L)`)\cr
Polynomial degree of basis functions.}

\item{derivs}{(`integer(1L)`)\cr
Number of penalized differences.}

\item{val_fraction}{(`numeric(1L)`)\cr
Fraction of samples used for validation.}

\item{patience}{(`integer(1L)`)\cr
Number of consecutive iterations without improvement to stop the algorithm.}

\item{eps_for_break}{(`numeric(1L)`)\cr
Minimal relative improvement without stopping the algorithm.}

\item{positive}{(`character(1L)`)\cr
Name of the positive class in binary classification.}

\item{seed}{(`numeric(1L)`)\cr
Seed for generating validation data (only applies when val_fraction is set).}
}
\value{
Client model of R6 class ClientModel.
}
\description{
Train a distributed CWB model.
}
